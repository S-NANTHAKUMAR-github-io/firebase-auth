try {
        seterror("")
        await confirmObj.confirm(otp);
        navigate("/home");
      } catch (error) {
        seterror(error.message)
      }

  }


  import React, { useState, useEffect } from 'react';
import { Alert, Button, Form } from 'react-bootstrap';
import 'react-phone-number-input/style.css';
import PhoneInput from 'react-phone-number-input';
import { Link, useNavigate } from 'react-router-dom';
import { useUserAuth } from '../context/UserAuthContext';

const PhoneSignUp = () => {
  const [number, setNumber] = useState('');
  const [error, setError] = useState('');
  const [otp, setOtp] = useState('');
  const [flag, setFlag] = useState(false);
  const [confirmObj, setConfirmObj] = useState('');
  const { setUpRecaptcha } = useUserAuth();
  const navigate = useNavigate();
  const [countdown, setCountdown] = useState(30);

  useEffect(() => {
    let intervalId;

    if (countdown > 0 && flag) {
      intervalId = setInterval(() => {
        setCountdown((prevCountdown) => prevCountdown - 1);
      }, 1000);
    } else {
      clearInterval(intervalId);
    }

    return () => {
      clearInterval(intervalId);
    };
  }, [countdown, flag]);

  const getOtp = async (e) => {
    e.preventDefault();
    console.log(number);
    setError('');
    if (number === '' || number === undefined)
      return setError('Please enter a valid Phone Number!');
    try {
      const response = await setUpRecaptcha(number);
      console.log(response);
      setConfirmObj(response);
      setFlag(true);
      setCountdown(30);
    } catch (error) {
      setError(error.message);
    }
    console.log(number);
  };

  const verifyOtp = async (e) => {
    e.preventDefault();
    console.log(otp);
    if (otp === '' || otp == null) return;
    try {
      setError('');
      const response = await fetch('YOUR_API_ENDPOINT', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${confirmObj.accessToken}`,
        },
        body: JSON.stringify({ otp }),
      });
      if (response.ok) {
        navigate('/home');
      } else {
        const data = await response.json();
        setError(data.error);
      }
    } catch (error) {
      setError(error.message);
    }
  };

  return (
    <>
      <div className="p-4 box">
        <h2 className="mb-3">Phone Auth Login</h2>
        {error && <Alert variant="danger">{error}</Alert>}
        <Form onSubmit={getOtp} style={{ display: !flag ? 'block' : 'none' }}>
          <Form.Group className="mb-3" controlId="formBasicPhoneNumber">
            <PhoneInput
              defaultCountry="IN"
              value={number}
              onChange={setNumber}
              placeholder="Enter Phone Number"
            />
            <div id="recaptcha-container"></div>
          </Form.Group>
          <div className="button-right">
            <Link to="/">
              <Button variant="secondary">Cancel</Button> &nbsp;
            </Link>
            <Button variant="primary" type="submit">
              Send OTP
            </Button>
          </div>
        </Form>

        {/* OTP Verification */}
        <Form onSubmit={verifyOtp} style={{ display: flag ? 'block' : 'none' }}>
          <Form.Group className="mb-3" controlId="formBasicOtp">
            <Form
